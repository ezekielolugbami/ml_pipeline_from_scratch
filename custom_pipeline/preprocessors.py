from sklearn.linear_model import LogisticRegression
from sklearn.metrics import mean_squared_error, roc_auc_score, f1_score, precision_score


class Pipeline:

    def __init__(self, target, numerical_to_imput, categorical_to_imput, numerical_log, 
    categorical_encode, features, test_size =0.1, random_state =0, percentage=0.005):

        # data set
        self.X_train = None
        self.X_test = None
        self.y_train = None
        self.y_test = None

        # engineering parameters to be learnt from the data
        self.imputing_dict = {}
        self.frequent_category_dict = {}
        self.encoding_dict = {}


        # models
        self.scaler = MinMaxScaler()
        self.model = LogisticRegression(random_state=random_state)


        # variables to be engineered
        self.target = target 
        self.numerical_to_imput = numerical_to_imput
        self.categorical_to_imput = categorical_to_imput
        self.numerical_log = numerical_log
        self.categorical_encode =  categorical_encode 
        self.features = features

        # more parameters
        self.test_size = test_size
        self.random_state = random_state
        self.percentage = percentage
        






















































































 



































































































































































































     






















































































 




























































































































































































































































































































































 